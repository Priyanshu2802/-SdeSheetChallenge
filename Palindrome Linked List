ListNode* reverse(ListNode* head)
    {
        if(!head || !head->next)return head;
        ListNode* newHead=reverse(head->next);
        ListNode* nextHead=head->next;
        nextHead->next=head;
        head->next=NULL;
        return newHead;
    }

    bool isPalindrome(ListNode* head) {
        ListNode* slow=head, *fast=head;
        while(fast and fast->next)
        {
            slow=slow->next;
            fast=fast->next;
            fast=fast->next;
        }
        if(fast)
        {
            slow->next=reverse(slow->next);
            slow=slow->next;
        }
        else
            slow=reverse(slow);
        fast=head;
        while(fast and slow)//checking from mid and start for the palindrome
        {
            if(fast->val!=slow->val)return 0;
            fast=fast->next;
            slow=slow->next;
        }
        return 1;
    }
