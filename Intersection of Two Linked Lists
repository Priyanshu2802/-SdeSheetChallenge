ListNode *getIntersectionNode(ListNode *head1, ListNode *head2) {
        // int n1=0,n2=0;
        // ListNode* temp=head1;
        // while(temp)
        // {
        //     n1++;
        //     temp=temp->next;
        // }
        // temp=head2;
        // while(temp)
        // {
        //     n2++;
        //     temp=temp->next;
        // }
        // if(n2>n1)swap(head1,head2);
        // for(int i=1;i<=abs(n2-n1);i++)head1=head1->next;
        // while(head1 and head2)
        // {
        //     if(head1==head2)return head1;
        //     head1=head1->next;
        //     head2=head2->next;
        // }
        // return NULL;
        // map<ListNode*,int>mp;
        // ListNode* temp=head1;
        // while(temp)
        // {
        //     mp[temp]++;
        //     temp=temp->next;
        // }
        // temp=head2;
        // while(temp)
        // {
        //     if(mp[temp]>0)return temp;
        //     temp=temp->next;
        // }
        // return NULL;
        ListNode* a=head1,*b=head2;
        while(a!=b)
        {
            a=a==NULL?head2:a->next;
            b=b==NULL?head1:b->next;
        }
        return a;
    }
