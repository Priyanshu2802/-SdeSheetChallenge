void helper(vector<int>&nums,vector<int>&temp,int index,vector<vector<int>>&ans)
    {
        int n=nums.size();
        ans.push_back(temp);
        if(index==n)return;
        
        for(int i=index;i<n;i++)
        {
            if(i>index and nums[i]==nums[i-1])continue;
            temp.push_back(nums[i]);
            helper(nums,temp,i+1,ans);
            temp.pop_back();
        }
        return;
    }
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        vector<int>temp;
        helper(nums,temp,0,ans);
        return ans;
    }
